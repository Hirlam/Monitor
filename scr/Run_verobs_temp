#!/bin/sh

set -a

#
# Run verobs for surface variables
#

if [ $# -eq 1 ] ; then
   ENV_EXP=$1
else
   echo "Please give an Env_exp file"
   exit 1
fi
[[ -s $ENV_EXP ]] || { echo "Please give an existing Env_exp file" ; exit 1 ; }

. $ENV_EXP  || { echo "Could not source $ENV_EXP" ; exit 1 ; }

cd $SCR || exit

DIR=TEMP
mkdir $WRK/${DIR}_$$ || exit

# Generate namelists
if [ $ALL_AT_ONCE == "yes" ] ; then
   ./Build_namelist.pl -t ${DIR} -p "$TEMPPAR" > $WRK/${DIR}_$$/fort.10 || exit
else
   for F in $TEMPPAR ; do
      ./Build_namelist.pl -t ${DIR} -p $F > $WRK/${DIR}_$$/namelist_$F || exit
   done
fi

cd $WRK/${DIR}_$$ || exit

ln -s $SCR/*.poly    .
ln -s $SCR/coast2.dat coast.dat

# Run verobs for the different variables
if [ $ALL_AT_ONCE == "yes" ] ; then
   cat fort.10
   $BIN/verobs || exit
else
   for F in $TEMPPAR ; do
      cp namelist_$F fort.10
      cat fort.10
      $BIN/verobs || exit
   done
fi

#
# Call gnuplot to create the graphics
#

$SCR/verobs2gnuplot.pl -d || exit
if [ `echo $TEMPPLOT | grep -c CONT` -gt 0 ] ; then
   export SELECTOR
   for SELECTOR in $SCORETYPES ; do
     $SCR/contingency2gnuplot.pl c_*.html || exit
   done
fi
RESIZE=100%
ROTATE="-rotate 90"

[[ $WEBCALL == ""  ]] && exit

# Quality control information
echo '<pre>'   > quality.html
cat fort.48   >> quality.html
echo '</pre>' >> quality.html

#
# Generate browser friendly graphics
#

cp $SCR/style.xsl .

if [ `echo $TEMPPLOT | grep -c VERT` -gt 0 ] ; then
   mkdir vert 
   mv l*.ps l*.png l*.jpg l*.svg vert
fi

#
# Deal with per level plots
#

TARARG="*.html"
if [ $OUTPUT_TYPE -eq 1 ] ; then
   echo "Convert postscript to png..."
   for F in $( ls -1 *.ps ) ; do
      FF=$( basename $F .ps )
      convert -resize $RESIZE -rotate 90 $FF.ps $FF.png
   done
   TARARG="$TARARG *.png *.ps"
elif [ $OUTPUT_TYPE -eq 2 ] ; then
   TARARG="$TARARG *.png"
elif [ $OUTPUT_TYPE -eq 3 ] ; then
   TARARG="$TARARG *.jpg"
elif [ $OUTPUT_TYPE -eq 4 ] ; then
   TARARG="$TARARG *.svg"
fi
tar cvf temp.tar $TARARG
$WEBCALL -e Temp -f temp.tar
rm -f *.jpg *.ps *.png *.svg temp.tar


if [ `echo $TEMPPLOT | grep -c VERT` -gt 0 ] ; then

   #
   # Vertical profiles
   #

   TARARG="*.html"
   [ `echo $TEMPPLOT | grep -c XML` -gt 0 ] && TARARG="$TARARG *.xml style.xsl"

   if [ $OUTPUT_TYPE -eq 1 ] ; then
      rm -f *.ps
      mv vert/*.ps .
      echo "Convert postscript to png..."
      for F in $( ls -1 *.ps ) ; do
         FF=$( basename $F .ps )
         convert -resize $RESIZE $ROTATE $FF.ps $FF.png
      done
      TARARG="$TARARG *.png *.ps"
   elif [ $OUTPUT_TYPE -eq 2 ] ; then
      rm -f *.png
      mv vert/*.png .
      TARARG="$TARARG *.png"
   elif [ $OUTPUT_TYPE -eq 3 ] ; then
      rm -f *.jpg
      mv vert/*.jpg .
      TARARG="$TARARG *.jpg"
   elif [ $OUTPUT_TYPE -eq 4 ] ; then
      rm -f *.svg
      mv vert/*.svg .
      TARARG="$TARARG *.svg"
   fi 
   tar cvf vert.tar $TARARG
   rmdir vert
   $WEBCALL -e Temp_prof -f vert.tar
   rm -f vert.tar

fi


# Create WebgraF interface
cd $SCR
./Create_ver_js.pl TEMP

# Clean
rm -rf $WRK/${DIR}_$$ || exit
rm -f input.js
