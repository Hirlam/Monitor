#!/bin/bash

set -ax

. Env_exp

[[ $WEBCALL == "" ]] && exit

DOWNLOAD=""
[[ $OUTPUT_TYPE -eq 1 ]] && DOWNLOAD="download=['ps']"
SURFVAR="'Wind speed','Wind dir','PMSL','T2m','Rh2m','q2m','Cloud cover','Precipitation'"
TEMPVAR="'Wind speed','Wind dir','Temperature','Relative hum','Specific hum.','Height'"

II="["
MYEXP="["
I=1
while [ ${EXP[$I]} ] ; do
	echo EXP ${EXP[$I]}
   II="${II},${I}"
   H=${EXP[$I]}
   MYEXP="${MYEXP},'${EXP[$I]}'"
   I=$( expr $I + 1 )
done
II="${II}]"
MYEXP="${MYEXP}]"
MYEXP=`echo $MYEXP | sed "s/,//"`
II=`echo $II | sed "s/,//"`

NLEV=0
for LEV in $LEV_LST ; do
   NLEV=$( expr $NLEV + 1 ) 
done
NLEV=$( expr $NLEV - 1 ) 
LEV_LST=`echo $LEV_LST | sed "s/ /,/g"`

#
# Surface definition file
#

cat > input.js << EOF

title = "Surface verification"

framec="Goldenrod"

v[0] = ['PS','ps','V','v','f']
t[0] = ['Timeserie stat','Timeserie','Fc length ver','Dayvar','Freq dist.']
v[1] = ['00000000']
t[1] = v[1]
v[2] = ['00000000']
t[2] = v[2]
v[3] =[1] ;
t[3] = v[3] ;
v[4] = ['calc',0,7]
t[4] = [$SURFVAR]
v[5] =[0] ;
t[5] = v[5] ;
v[6] =[0] ;
t[6] = v[6] ;

loc = ['l','t','l','l','l','l','l']
$DOWNLOAD

mname = ["Type","Period","Station","dum","Parameter","Level","Exp"]
help = "${HELP}"; hide_help = false ;
pdir ="Surface/"
ext='png'
do_send = true ;

EOF

$WEBCALL -e Surface -f input.js


#
# Surface scatter definition file
#

cat > input.js << EOF
title = "Surface stations"

framec="lightcoral"


v[0] = ['s']
t[0] = ['Full scatter']
v[1] = ['00000000']
t[1] = v[1]
v[2] = ['00000000']
t[2] = v[2] ;
v[3] =  [1] ;
t[3] = v[3] ;
v[4] = ['calc',0,7]
t[4] = [$SURFVAR]
v[5] =  [0] ;
t[5] = v[5] ;
v[6] =$II
t[6] =$MYEXP

mname = ["Type","Period","Station","dum","Parameter","Level","Exp"]
loc = ['l','t','l','l','l','l','l']
$DOWNLOAD
pdir ="Surface/"
ext='png'
help = "${HELP}"; hide_help = false ;
do_send = true ;
my_xml_txt = ['Statistics','Contingency table',$SURFVAR]
my_xml = ['Surface_LL.html','contingency.html','FF_00000000','DD_00000000','PS_00000000','TT_00000000','RH_00000000','QQ_00000000','NN_00000000','PE_00000000']
EOF

$WEBCALL -e Surf_scat -f input.js

#
# Bias maps
#

cat > input.js << EOF
// Input file

title = "Bias maps of surface variables"

framec="Teal"

v[0] = ['M']
t[0] = ['By time of day']
v[1] = ['b','r']
t[1] = ['Bias','Rmse']
v[2] = ['00000000']
t[2] = v[2]
v[3] = ['00000000']
t[3] = v[3] ;
v[4] =[1] ;
t[4] = v[4] ;
v[5] = ['calc',0,7]
t[5] = [$SURFVAR]
v[6] =[0] ;
t[6] =[0]
v[7] =$II
t[7] = [$MYEXP]

mname = ["Type","Error","Period","Station","dum","Parameter","Hour","Exp"]
loc =['l','l','t','l','l','l','l','l']
$DOWNLOAD
pdir ="Surface/"
ext='png'
help = "${HELP}"; hide_help = false ;
do_send = true ;
EOF
$WEBCALL -e Bias_maps -f input.js

#
# Temp
#

cat > input.js << EOF
// Input file


// Input file

title = "Radiosonde verification"

framec="Lightsalmon"

v[0] = ['PS','ps','V']
t[0] = ['Timeserie stat','Timeserie','Fc length ver']
v[1] = ['00000000']
t[1] = v[1] ;
v[2] = ['00000000']
t[2] = v[2] ;
v[3] =[1] ;
t[3] = v[3] ;
v[4] = ['calc',0,5]
t[4] = [$TEMPVAR]
v[5] = ['calc',0,$NLEV]
t[5] = [$LEV_LST]
v[6] =[0] ;
t[6] = v[6] ;

mname = ["Type","Period","Station","dum","Parameter","Level (hPa)","Exp"]

loc = ['l','t','l','l','l','l','l']
$DOWNLOAD
pdir ="Temp/"
ext='png'
help = "${HELP}"; hide_help = false ;
do_send = true ;
EOF

$WEBCALL -e Temp -f input.js

#
# Vert
#

cat > input.js << EOF
// Input file


// Input file

title = "Vertical temp"
framec="Tomato"

v[0] = ['L']
t[0] = ['diff']
v[1] = ['00000000']
t[1] = v[1] ;
v[2] = ['00000000']
t[2] = v[2] ;
v[3] =[1] ;
t[3] = v[3] ;
v[4] = ['calc',0,5]
t[4] = [$TEMPVAR]
v[5] =[0] ;
t[5] =[0]
v[6] =[0] ;
t[6] =[0] ;
mname = ["Type","Period","Station","dum","Parameter","Level","Exp"]

loc = ['l','t','l','l','l','l','l']
$DOWNLOAD

pdir ="Vert/"
ext='png'
help = "${HELP}"; hide_help = false ;
do_send = true ;
EOF

LEV_LST=`echo $LEV_LST | sed "s/,/ /g"`

echo "my_xml_txt = [" >> input.js
for VAR in FF DD RH QQ FI ; do
for LEV in $LEV_LST ; do
	LEV4=`perl -e "printf('%04d', '$LEV')"`
	echo "'${VAR}${LEV4}'",  >> input.js
done
done
echo "'Statistics']" >> input.js

echo "my_xml = [" >> input.js
for VAR in FF DD RH QQ FI ; do
for LEV in $LEV_LST ; do
	LEV4=`perl -e "printf('%04d', '$LEV')"`
	echo "'${VAR}${LEV4}_00000000'",  >> input.js
done
done
echo "'Temp.html']" >> input.js
echo "my_xml.reverse()" >> input.js
echo "my_xml_txt.reverse()" >> input.js

$WEBCALL -e Vert -f input.js

rm -f input.js
