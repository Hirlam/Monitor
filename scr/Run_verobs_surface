#!/bin/sh

set -a

#
# Run verobs for surface variables
#

if [ $# -eq 1 ] ; then
   ENV_EXP=$1
else
   echo "Please give an Env_exp file"
   exit 1
fi
[[ -s $ENV_EXP ]] || { echo "Please give an existing Env_exp file" ; exit 1 ; }

. $ENV_EXP  || { echo "Could not source $ENV_EXP" ; exit 1 ; }

cd $SCR || exit


# Generate namelists

DIR=SURF

mkdir $WRK/${DIR}_$$ || exit

if [ $ALL_AT_ONCE == "yes" ] ; then
   ./Build_namelist.pl -t ${DIR} -p "$SURFPAR" > $WRK/${DIR}_$$/fort.10 || exit
else
   for F in $SURFPAR ; do
      ./Build_namelist.pl -t ${DIR} -p $F > $WRK/${DIR}_$$/namelist_$F || exit
   done
fi

cd $WRK/${DIR}_$$ || exit

ln -s $SCR/*.poly .
ln -s $SCR/coast2.dat coast.dat

# Run verobs for the different variables

if [ $ALL_AT_ONCE == "yes" ] ; then
   $BIN/verobs || exit
else
   for F in $SURFPAR ; do
      cp namelist_$F fort.10
      $BIN/verobs || exit
   done
fi


#
# Call gnuplot to create the graphics
#

$SCR/verobs2gnuplot.pl -d || exit
if [ `echo $SURFPLOT | grep -c CONT` -gt 0 ] ; then
   export SELECTOR
   for SELECTOR in $SCORETYPES ; do
     $SCR/contingency2gnuplot.pl c_*.html || exit
   done
fi
RESIZE=100%

[[ $WEBCALL == ""  ]] && exit

# Quality control information
if [ -s fort.48 ] ; then
echo '<pre>'   > quality.html
cat fort.48   >> quality.html
echo '</pre>' >> quality.html
fi

# Generate browser friendly graphics and gather files
rm -f fig.tar

cp $SCR/style.xsl .
tar cvf fig.tar *.html
[[ `echo $SURFPLOT | grep -c XML` -gt 0 ]] && tar rvf fig.tar *.xml style.xsl

if [ $OUTPUT_TYPE -eq 1 ] ; then
   for F in $( $SCR/Create_file_list.pl .ps ) ; do
      FF=$( basename $F .ps )
      convert -resize $RESIZE -rotate 90 $FF.ps $FF.png
      tar rvf fig.tar $FF.ps $FF.png
   done
elif [ $OUTPUT_TYPE -eq 2 ] ; then
   for F in $( $SCR/Create_file_list.pl .png ) ; do
      tar rvf fig.tar $F
   done
elif [ $OUTPUT_TYPE -eq 3 ] ; then
   for F in $( $SCR/Create_file_list.pl .jpg ) ; do
      tar rvf fig.tar $F
   done
elif [ $OUTPUT_TYPE -eq 4 ] ; then
   for F in $( $SCR/Create_file_list.pl .svg ) ; do
      tar rvf fig.tar $F
   done
fi

# Send data to WebgraF and create interface
$WEBCALL -e Surface -f fig.tar
cd $SCR 
./Create_ver_js.pl SURF

# Clean
rm -rf $WRK/${DIR}_$$
rm -f input.js
