#!/bin/ksh

set -ax

#
# Run verobs for surface variables
#

# Spec

. ./Env_exp

cd $SCR || exit



# Generate namelists

DIR=SURF

mkdir $WRK/${DIR}_$$ || exit

if [ $ALL_AT_ONCE == "yes" ] ; then
   ./Build_namelist.pl -t ${DIR} -p "$SURFPAR" > $WRK/${DIR}_$$/fort.10 || exit
else
   for F in $SURFPAR ; do
      ./Build_namelist.pl -t ${DIR} -p $F > $WRK/${DIR}_$$/namelist_$F || exit
   done
fi

cd $WRK/${DIR}_$$ || exit

ln -s $SCR/*.poly .

# Run verobs for the different variables
if [ $ALL_AT_ONCE == "yes" ] ; then
   $BIN/verobs || exit
else
   for F in $SURFPAR ; do
      cp namelist_$F fort.10
      $BIN/verobs || exit
   done
fi

if [ $GRAPHICS == GNUPLOT ] ; then
 $SCR/verobs2gnuplot.pl *.txt || exit
 RESIZE=100%
else
 RESIZE=75%
fi

[[ $WEBCALL == ""  ]] && exit

# Quality control information
echo '<pre>'   > quality.html
cat fort.48   >> quality.html
echo '</pre>' >> quality.html

# Generate browser friendly graphics and gather files

if [ $OUTPUT_TYPE -eq 1 ] ; then
   for F in $( ls -1 *.ps ) ; do
      FF=$( basename $F .ps )
      convert -resize $RESIZE -rotate 90 $FF.ps $FF.png
   done
   tar cvf fig.tar *.png  *.ps
elif [ $OUTPUT_TYPE -eq 2 ] ; then
   tar cvf fig.tar *.png 
elif [ $OUTPUT_TYPE -eq 3 ] ; then
   tar cvf fig.tar *.jpg
fi

cp $SCR/style.xsl .

tar cvf xml.tar  *.xml style.xsl *.html

# Send data to WebgraF
$WEBCALL -e Surface -f fig.tar xml.tar
$WEBCALL -e Surface -f xml.tar

cd $SCR 

# Clean
rm -rf $WRK/${DIR}_$$

# Create WebgraF interface
./Create_ver_js.pl SURF

rm -f input.js
