#!/bin/bash

set -a

#
# Run verobs for surface or temp variables
#

if [ $# -eq 2 ] ; then
   ENV_EXP=$1
   DIR=$2
else
   echo "Please give an Env_exp file and SURF|TEMP as argument"
   exit 1
fi
[[ -s $ENV_EXP ]] || { echo "Please give an existing Env_exp file" ; exit 1 ; }

. $ENV_EXP  || { echo "Could not source $ENV_EXP" ; exit 1 ; }


case $DIR in
 SURF)
  ENTRY="Surface"
  PARARG=$SURFPAR
 ;;
 TEMP)
  ENTRY="Temp"
  PARARG=$TEMPPAR
 ;;
 *)
  echo "Unknown verification type $DIR"
  exit 1
 ;;
esac

# Skip if no parameters selected
if [ -z "$PARARG" ] ; then
 echo "No verification done for $ENTRY"
 exit 0
fi

cd $SCR || exit


# Generate namelists

mkdir $WRK/${DIR}_$$ || exit

if [ $ALL_AT_ONCE == "yes" ] ; then
   ./Build_namelist.pl -t ${DIR} -p "$PARARG" > $WRK/${DIR}_$$/fort.10 || exit
else

   NPAR=$( echo ${PARARG} | wc | awk '{print $2}' )
   [[ $PAR_PER_BLOCK -gt $NPAR ]] && PAR_PER_BLOCK=$NPAR

   I=1
   FF=""
   for F in ${PARARG} ; do
      II=$(( $I % $PAR_PER_BLOCK ))
      FF="$FF $F"
      if [ $II -eq 0 -o $I -eq $NPAR ] ; then 
        ./Build_namelist.pl -t ${DIR} -p "$FF" > $WRK/${DIR}_$$/namelist_$I || exit
        FF=""
      fi
      I=$(( $I + 1 ))
   done
fi

cd $WRK/${DIR}_$$ || exit

ln -s $SCR/*.poly .
ln -s $SCR/coast2.dat coast.dat
[[ -s $SCR/black.list.$PAR ]] && ln -s $SCR/black.list.$PAR black.list

# Run verobs for the different variables

if [ $ALL_AT_ONCE == "yes" ] ; then
   cat fort.10
   $MPPGL $BIN/verobs || exit
else
   for F in $( ls -1 namelist_* ) ; do
      ln -sf $F fort.10
      cat fort.10
      $MPPGL $BIN/verobs || exit
   done
fi

#
# Call gnuplot to create the graphics
#

$SCR/verobs2gnuplot.pl -d . -t ${DIR} -c || exit

ls c_*.html 1>/dev/null 2>/dev/null && {
   export SELECTOR
   for SELECTOR in $SCORETYPES ; do
     $SCR/contingency2gnuplot.pl c_*.html || exit
   done
}


[[ $WEBCALL == ""  ]] && exit

# Quality control information
if [ -s fort.48 ] ; then
 if [ $PERIOD_TYPE -eq 1 ] ; then
  TSTAMP=00000000
 else
  TSTAMP=00${SDATE:0:6}
 fi
 QFILE=quality_${TSTAMP}.html
 echo '<pre>'   > $QFILE
 cat fort.48   >> $QFILE
 echo '</pre>' >> $QFILE
fi

# Clean work files
rm -f *.txt* *.poly fort.* *.dat plot.gp *scores* || exit 1

#
# Generate browser friendly graphics and gather files
#

cp $SCR/style.xsl .

if [ `echo $TEMPPLOT | grep -c VERT` -gt 0 -a $DIR = "TEMP" ] ; then

   #
   # Vertical profiles
   #

   mkdir vert 
   mv l*.ps l*.png l*.jpg l*.svg vert/.
   cp *.html *.xml *.xsl vert/.

   cd vert
   if [ $OUTPUT_TYPE -eq 1 ] ; then
      echo "Convert postscript to png..."
      for F in $( ls -1 *.ps ) ; do
         FF=$( basename $F .ps )
         convert -resize 100% rotate -90 $FF.ps $FF.png
      done
   fi 
   $WEBCALL -e ${ENTRY}_prof -fm $PWD/
   cd -
   rmdir vert

fi

#
# Deal with per level plots or surface plots
#

TARARG="*.html"
if [ $OUTPUT_TYPE -eq 1 ] ; then
   echo "Convert postscript to png..."
   for F in $( $SCR/Create_file_list.pl .ps ) ; do
      FF=$( basename $F .ps )
      convert -resize 100% -rotate 90 $FF.ps $FF.png
   done
fi

# Send data to WebgraF and create interface
$WEBCALL -e $ENTRY -fm $PWD/
cd $SCR
./Create_ver_js.pl $DIR

# Clean
rm -rf $WRK/${DIR}_$$ || exit
rm -f input.js
